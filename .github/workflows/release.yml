name: CI/CD Workflow

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  CI: true

jobs:
  ci:
    if: "!contains(github.event.head_commit.message , '[skip-ci]')"
    name: CI Flow
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [10, 12, 13]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Lint commit messages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: wagoid/commitlint-github-action@v1
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: Cache node modules
        id: cache
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install the dependencies
        run: npm ci
      - name: Check for linter errors
        run: npm run lint
      - name: Run the test cases
        run: npm test
      - name: Upload coverage report
        uses: actions/upload-artifact@v1
        with:
          name: coverage
          path: coverage/coverage-final.json
  cd:
    needs: ci
    name: CD Flow
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Cache node modules
        id: cache
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install the dependencies
        run: npm ci
      - name: Build the source code
        run: npm run build
      - name: Download coverage report
        uses: actions/download-artifact@v1
        with:
          name: coverage
      - name: Upload Codecov report
        uses: codecov/codecov-action@v1
        with:
          file: coverage/coverage-final.json
          fail_ci_if_error: true
      - name: Release new version to NPM
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
