name: CI/CD Workflow

on:
  push:
    branches:
      - 'master'

jobs:
  ci:
    if: github.event_name == 'push' && contains(toJson(github.event.commits), '***NO_CI***') == false && contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false
    name: CI Flow
    runs-on: ubuntu-latests
    strategy:
      matrix:
        node: [10, 12, 13]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: Cache node modules
        id: cache
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install the dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Format the code using Prettier
        run: npm run format
      - name: Check for linter errors
        run: npm run lint
      - name: Run the test cases
        run: npm test
  cd:
    needs: ci
    name: CD Flow
    runs-on: ubuntu-latests
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Cache node modules
        id: cache
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install the dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build the source code
        run: npm run build
      - name: Release new version to NPM
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx sematic-release
